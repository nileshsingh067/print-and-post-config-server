#Port where mosip spring cloud config server needs to run
server.port = 51000

#Git repository location where configuration files are stored
#live
#spring.cloud.config.server.git.uri=git@github.com:mosip/mosip.git 




#spring.cloud.config.server.native.uri=file:///home/nilesh/Documents/config/mosip-ivv/config
spring.cloud.config.server.git.uri: file:///home/nilesh/Documents/mosip_master/mosip-ivv
#test
#spring.cloud.config.server.git.uri=https://gitlab.com/mosip/mosip-ivv.git
#spring.cloud.config.server.git.username=nileshsingh067
#spring.cloud.config.server.git.password=
#spring.cloud.config.server.git.skipSslValidation: true
#management.security.enabled=false
#Path inside the GIT repo where config files are stored, in our case they are inside config directory
spring.cloud.config.server.git.search-paths=config

#Server would return a HTTP 404 status, if the application is not found.By default, this flag is set to true.
#spring.cloud.config.server.accept-empty=false

#Spring Cloud Config Server makes a clone of the remote git repository and if somehow the local copy gets 
#dirty (e.g. folder content changes by OS process) so Spring Cloud Config Server cannot update the local copy
#from remote repository. For Force-pull in such case, we are setting the flag to true.
#spring.cloud.config.server.git.force-pull=true

# Disabling health endpoints to improve performance of config server while in development, can be commented out in future.
health.config.enabled=false
#spring.cloud.config.server.health.enabled=false

# Setting up refresh rate to 1 minute so that config server will check for updates in Git repo after every one minute,
#can be lowered down for production.
#spring.cloud.config.server.git.refreshRate=60
